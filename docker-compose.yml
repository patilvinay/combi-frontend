version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: postgres-db
    restart: always
    environment:
      POSTGRES_DB: iotdb
      POSTGRES_USER: iotuser
      POSTGRES_PASSWORD: iotpassword
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data/
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U iotuser -d iotdb"]
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: iot-backend
    restart: always
    ports:
      - "5050:5050"
    environment:
      - DATABASE_URL=postgresql://iotuser:iotpassword@postgres:5432/iotdb
      - API_KEY=Xj7Bq9Lp2Rt5Zk8Mn3Vx6Hs1
      - DEBUG=true
    volumes:
      - ./backend:/app
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - app-network
    command: ["/app/start.sh"]
  #       uvicorn app.main:app --host 0.0.0.0 --port 5050
  #     "

  # frontend:
  #   build:
  #     context: ./frontend
  #     dockerfile: Dockerfile
  #   container_name: iot-frontend
  #   restart: always
  #   ports:
  #     - "3000:3000"
  #   environment:
  #     - NODE_ENV=development
  #     - REACT_APP_API_URL=http://localhost:5050/api/v1
  #   volumes:
  #     - ./frontend:/app
  #     - /app/node_modules
  #   depends_on:
  #     - backend
  #   networks:
  #     - app-network
  #   stdin_open: true
  #   tty: true

  # Uncomment and configure these services if needed in the future
  # iot-client:
  #   image: iot-client
  #   build: ./iot-client
  #   container_name: iot-container
  #   restart: always
  #   ports:
  #     - "5000:5000"
  #   environment:
  #     - EVENTHUB_CONNECTION_STRING=your_eventhub_connection_string
  #     - CONSUMER_GROUP=$Default
  #     - DEVICE_ID=48:CA:43:36:71:04
  #     - API_KEY=Xj7Bq9Lp2Rt5Zk8Mn3Vx6Hs1
  #     - USE_MOCK_DATA=false
  #     - DATA_STALENESS_TIMEOUT=300
  #     - FLASK_ENV=development
  #     - DATABASE_URL=postgresql://iotuser:iotpassword@postgres:5432/iotdb
  #   depends_on:
  #     - postgres
  #   networks:
  #     - app-network

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:
